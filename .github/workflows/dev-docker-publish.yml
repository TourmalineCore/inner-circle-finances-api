name: deploy service to dev k8s

on:
  push:
    branches:
      - develop
  pull_request:

env:
  GITHUB_REGISTRY: ghcr.io

jobs:
  sandbox-karate:
    name: Run karate tests in docker 
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-22.04
    services:
      docker:
        image: docker:latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2.0.0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1 
    - name: Set up Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
    - name: Create Docker network
      run: docker network create ic-backend-deb
    - name: Build and run tests with Docker Compose
      run: |
        docker-compose up -d
        curl -L -o karate.jar https://github.com/karatelabs/karate/releases/download/v1.4.0/karate-1.4.0.jar
        java -jar karate.jar ./SalaryService.Tests/API/e2e/KarateTests.feature -D DEV_KARATE_LOGIN=${{ secrets.DEV_KARATE_LOGIN }} DEV_KARATE_PASSWORD=${{ secrets.DEV_KARATE_PASSWORD }} DEV_KARATE_URL=${{ secrets.LOCAL_KARATE_URL }}
  build-image:
    name: Build and push service image 
    if: github.event_name == 'push'
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v1
      - name: Build and push image
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
          docker build -t $GITHUB_REGISTRY/tourmalinecore/inner-circle/salary-api:latest -t $GITHUB_REGISTRY/tourmalinecore/inner-circle/salary-api:${{ github.sha }} -f SalaryService.Api/Dockerfile .
          docker push $GITHUB_REGISTRY/tourmalinecore/inner-circle/salary-api:latest
          docker push $GITHUB_REGISTRY/tourmalinecore/inner-circle/salary-api:${{ github.sha }}
  deploy-to-dev-k8s:
    needs: build-image
    name: Deploy service to k8s for development environment  
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v1
      - name: Deploy
        uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: |
            RELEASE_NAME=salary-api
            helm repo add bitnami https://charts.bitnami.com/bitnami
            helm upgrade --install --namespace dev-inner-circle --create-namespace --values ./SalaryService.Api/ci/values-custom.yaml \
            --set "ingress.enabled=true" \
            --set "ingress.hostname=${{ secrets.DEV_HOST }}" \
            --set "image.tag=${{ github.sha }}" \
            --set "extraSecretEnvVars.ConnectionStrings__DefaultConnection=${{ secrets.DEV_POSTGRESQL_CONNECTION_STRING }}" \
            --set "extraSecretEnvVars.AuthenticationOptions__PublicSigningKey=${{ secrets.DEV_PUBLIC_SIGNING_KEY }}" \
            --set "extraSecretEnvVars.AuthenticationOptions__PrivateSigningKey=${{ secrets.DEV_PRIVATE_SIGNING_KEY }}" \
            "${RELEASE_NAME}" \
            bitnami/aspnet-core --version 4.4.7
          kubeconfig: "${{ secrets.DEV_KUBECONFIG }}"
  dev-karate:
    name: Run karate tests in production 
    needs: deploy-to-dev-k8s
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2.0.0
    - name: API tests
      uses: erikbos/karate-action@main
      with:
        tests: |
          ./SalaryService.Tests/API/e2e/KarateTests.feature -D DEV_KARATE_LOGIN=${{ secrets.DEV_KARATE_LOGIN }} DEV_KARATE_PASSWORD=${{ secrets.DEV_KARATE_PASSWORD }} DEV_KARATE_URL=${{ secrets.PROD_KARATE_URL }}


